<?xml version="1.0" encoding="utf-8"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="$(arg name)">
  <!-- Enable setting arguments from the launch file -->
  <xacro:arg name="name" default="rizon"/>
  
  <!-- 'rizon_type' values: rizon4, rizon4s, rizon10 -->
  <xacro:arg name="rizon_type" default="rizon4"/>

  <!-- import main macro -->
  <xacro:include filename="$(find flexiv_description)/urdf/rizon_macro.xacro"/>

  <!-- Import gripper-->
  <xacro:include filename="$(find flexiv_description)/urdf/grav.urdf.xacro"/>
  
  <!-- parameters -->
  <xacro:arg name="prefix" default="" />
  <xacro:arg name="robot_ip" default="" />
  <xacro:arg name="local_ip" default="" />
  <xacro:arg name="use_fake_hardware" default="false" />
  <xacro:arg name="fake_sensor_commands" default="false" />
  <xacro:arg name="initial_positions_file" default="$(find flexiv_description)/config/initial_positions.yaml"/>

  <!-- convert to property to use substitution in function -->
  <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)"/>

  <xacro:rizon_robot 
    rizon_type="$(arg rizon_type)" 
    prefix="$(arg prefix)" 
    robot_ip="$(arg robot_ip)" 
    local_ip="$(arg local_ip)" 
    use_fake_hardware="$(arg use_fake_hardware)" 
    fake_sensor_commands="$(arg fake_sensor_commands)" 
    initial_positions="${xacro.load_yaml(initial_positions_file)}">
  </xacro:rizon_robot>


  <!-- Include the gripper macro with the appropriate prefix 
  <xacro:gripper prefix="$(arg prefix)"/>
    <xacro:gripper prefix="gripper_"/>
    <joint name="gripper_base_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="flange"/>
      <child link="gripper_base_link"/>
    </joint>
  -->
  <!-- JointStatePublisher publishes joint state information for the model.
         In future versions of Gazebo, replace 'ignition-gazebo' with 'gz-sim' and
         'ignition::gazebo' with 'gz::sim'
    -->
    <gazebo>
        <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
            <topic>joint_states</topic>
        </plugin>    
    </gazebo>  
</robot>
